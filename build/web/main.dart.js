// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const developer = dart_sdk.developer;
  const html = dart_sdk.html;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const container = flutter_sdk.src__widgets__container;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text = flutter_sdk.src__widgets__text;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const basic_types = flutter_sdk.src__painting__basic_types;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const key = flutter_sdk.src__foundation__key;
  const ink_well = flutter_sdk.src__material__ink_well;
  const colors = flutter_sdk.src__material__colors;
  const alignment = flutter_sdk.src__painting__alignment;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const dialog = flutter_sdk.src__material__dialog;
  const navigator = flutter_sdk.src__widgets__navigator;
  const divider = flutter_sdk.src__material__divider;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const text_style = flutter_sdk.src__painting__text_style;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const message_codec = flutter_sdk.src__services__message_codec;
  const overlay$ = flutter_sdk.src__widgets__overlay;
  const media_query = flutter_sdk.src__widgets__media_query;
  const animation_controller = flutter_sdk.src__animation__animation_controller;
  const animations = flutter_sdk.src__animation__animations;
  const curves = flutter_sdk.src__animation__curves;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const proxy_box = flutter_sdk.src__rendering__proxy_box;
  const transitions = flutter_sdk.src__widgets__transitions;
  const animation = flutter_sdk.src__animation__animation;
  const material = flutter_sdk.src__material__material;
  const ticker_provider = flutter_sdk.src__widgets__ticker_provider;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var userlist = Object.create(dart.library);
  var useritem = Object.create(dart.library);
  var fluttertoast_web = Object.create(dart.library);
  var userdata = Object.create(dart.library);
  var fluttertoast = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isEmpty = dartx.isEmpty;
  var $add = dartx.add;
  var $_get = dartx._get;
  var $removeAt = dartx.removeAt;
  var $length = dartx.length;
  var $toUpperCase = dartx.toUpperCase;
  var $id = dartx.id;
  var $attributes = dartx.attributes;
  var $href = dartx.href;
  var $src = dartx.src;
  var $onLoad = dartx.onLoad;
  var $children = dartx.children;
  var $addAll = dartx.addAll;
  var $replaceAll = dartx.replaceAll;
  var $remove = dartx.remove;
  var $innerHtml = dartx.innerHtml;
  var $toRadixString = dartx.toRadixString;
  var $substring = dartx.substring;
  var $style = dartx.style;
  var $setProperty = dartx.setProperty;
  var $clear = dartx.clear;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfUserData: () => (T.JSArrayOfUserData = dart.constFn(_interceptors.JSArray$(userdata.UserData)))(),
    ValueKeyOfUserData: () => (T.ValueKeyOfUserData = dart.constFn(key.ValueKey$(userdata.UserData)))(),
    DismissDirectionTovoid: () => (T.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    FutureOfboolN: () => (T.FutureOfboolN = dart.constFn(async.Future$(T.boolN())))(),
    DismissDirectionToFutureOfboolN: () => (T.DismissDirectionToFutureOfboolN = dart.constFn(dart.fnType(T.FutureOfboolN(), [dismissible.DismissDirection])))(),
    BuildContextAndintToDismissible: () => (T.BuildContextAndintToDismissible = dart.constFn(dart.fnType(dismissible.Dismissible, [framework.BuildContext, core.int])))(),
    BuildContextAndintToDivider: () => (T.BuildContextAndintToDivider = dart.constFn(dart.fnType(divider.Divider, [framework.BuildContext, core.int])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    JSArrayOfFutureOfvoid: () => (T.JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(T.FutureOfvoid())))(),
    JSArrayOfHtmlElement: () => (T.JSArrayOfHtmlElement = dart.constFn(_interceptors.JSArray$(html.HtmlElement)))(),
    IdentityMapOfString$String: () => (T.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    JSArrayOf_ToastEntry: () => (T.JSArrayOf_ToastEntry = dart.constFn(_interceptors.JSArray$(fluttertoast._ToastEntry)))(),
    BuildContextToWidget: () => (T.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    JSArrayOfOverlayEntry: () => (T.JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay$.OverlayEntry)))(),
    AnimationOfdouble: () => (T.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    WidgetN: () => (T.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNTo_FToastHolder: () => (T.BuildContextAndWidgetNTo_FToastHolder = dart.constFn(dart.fnType(fluttertoast._FToastHolder, [framework.BuildContext, T.WidgetN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Konfirmasi"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Apakah Anda Yakin Akan Menghapus?"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Hapus"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Batal"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[6] || CT.C6
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: fluttertoast.Toast.prototype,
        [_Enum__name]: "LENGTH_SHORT",
        [_Enum_index]: 0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: fluttertoast.Toast.prototype,
        [_Enum__name]: "LENGTH_LONG",
        [_Enum_index]: 1
      });
    },
    get C7() {
      return C[7] = dart.constList([C[8] || CT.C8, C[9] || CT.C9], fluttertoast.Toast);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "TOP",
        [_Enum_index]: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "BOTTOM",
        [_Enum_index]: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "CENTER",
        [_Enum_index]: 2
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "TOP_LEFT",
        [_Enum_index]: 3
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "TOP_RIGHT",
        [_Enum_index]: 4
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "BOTTOM_LEFT",
        [_Enum_index]: 5
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "BOTTOM_RIGHT",
        [_Enum_index]: 6
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "CENTER_LEFT",
        [_Enum_index]: 7
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "CENTER_RIGHT",
        [_Enum_index]: 8
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "SNACKBAR",
        [_Enum_index]: 9
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: fluttertoast.ToastGravity.prototype,
        [_Enum__name]: "NONE",
        [_Enum_index]: 10
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21], fluttertoast.ToastGravity);
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[5] || CT.C5,
        [MethodChannel_name]: "PonnamKarthik/fluttertoast"
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 350000
      });
    }
  }, false);
  var C = Array(25).fill(void 0);
  var I = [
    "package:flutter_app/userlist.dart",
    "package:flutter_app/useritem.dart",
    "package:fluttertoast/fluttertoast_web.dart",
    "package:flutter_app/userdata.dart",
    "package:fluttertoast/fluttertoast.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.main = function main$0() {
    binding.runApp(new userlist.UserList.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    fluttertoast_web.FluttertoastWebPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  userlist.UserList = class UserList extends framework.StatefulWidget {
    createState() {
      return new userlist._UserListState.new();
    }
    static ['_#new#tearOff']() {
      return new userlist.UserList.new();
    }
  };
  (userlist.UserList.new = function() {
    userlist.UserList.__proto__.new.call(this);
    ;
  }).prototype = userlist.UserList.prototype;
  dart.addTypeTests(userlist.UserList);
  dart.addTypeCaches(userlist.UserList);
  dart.setMethodSignature(userlist.UserList, () => ({
    __proto__: dart.getMethods(userlist.UserList.__proto__),
    createState: dart.fnType(framework.State$(userlist.UserList), [])
  }));
  dart.setLibraryUri(userlist.UserList, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  userlist._UserListState = class _UserListState extends framework.State$(userlist.UserList) {
    build(context) {
      return new app.MaterialApp.new({home: new scaffold.Scaffold.new({body: new container.Container.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: T.JSArrayOfWidget().of([new container.Container.new({padding: new edge_insets.EdgeInsets.all(5), child: new text_field.TextField.new({controller: this.Nama, keyboardType: text_input.TextInputType.number, decoration: new input_decorator.InputDecoration.new({labelText: "Nama", border: new input_border.OutlineInputBorder.new()})})}), new container.Container.new({padding: new edge_insets.EdgeInsets.all(5), child: new text_field.TextField.new({controller: this.Umur, keyboardType: text_input.TextInputType.number, decoration: new input_decorator.InputDecoration.new({labelText: "Umur", border: new input_border.OutlineInputBorder.new()})})}), new container.Container.new({padding: new edge_insets.EdgeInsets.all(5), child: new text_field.TextField.new({controller: this.Email, keyboardType: text_input.TextInputType.number, decoration: new input_decorator.InputDecoration.new({labelText: "Email", border: new input_border.OutlineInputBorder.new()})})}), new container.Container.new({padding: new edge_insets.EdgeInsets.all(5), child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      try {
                        if (this.Nama.text[$isEmpty] || this.Umur.text[$isEmpty] || this.Email.text[$isEmpty]) dart.throw(core.Exception.new("Isian Tidak Boleh Kosong"));
                        if (this.btnSimpanText === "Simpan") {
                          this.daftarUser[$add](new userdata.UserData.new(this.Nama.text, core.int.parse(this.Umur.text), this.Email.text));
                        } else {
                          let userData = this.daftarUser[$_get](this.IndexDipilih);
                          userData.nama = this.Nama.text;
                          userData.umur = core.int.parse(this.Umur.text);
                          userData.email = this.Email.text;
                          this.btnSimpanText = "Simpan";
                          this.btnSimpanWarna = new ui.Color.fromARGB(255, 145, 137, 255);
                        }
                        this.setState(dart.fn(() => {
                          dart.wrapType(userdata.UserData);
                        }, T.VoidTovoid()));
                        this.Nama.text = "";
                        this.Umur.text = "";
                        this.Email.text = "";
                        developer.inspect(this.daftarUser);
                      } catch (e$) {
                        let e = dart.getThrown(e$);
                        if (core.Object.is(e)) {
                          fluttertoast.Fluttertoast.showToast({msg: dart.str(e)});
                        } else
                          throw e$;
                      }
                    }, T.VoidTovoid()), child: new text.Text.new(this.btnSimpanText), style: elevated_button.ElevatedButton.styleFrom({minimumSize: new ui.Size.new(150, 75), backgroundColor: this.btnSimpanWarna})})}), new basic.Expanded.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new scroll_view.ListView.separated({scrollDirection: basic_types.Axis.vertical, shrinkWrap: true, itemBuilder: dart.fn((context, index) => new dismissible.Dismissible.new({key: new (T.ValueKeyOfUserData()).new(this.daftarUser[$_get](index)), child: new ink_well.InkWell.new({child: new useritem.UserItem.new(this.daftarUser[$_get](index)), onTap: dart.fn(() => {
                            this.Nama.text = this.daftarUser[$_get](index).nama;
                            this.Umur.text = this.daftarUser[$_get](index).umur[$toString]();
                            this.Email.text = this.daftarUser[$_get](index).email;
                            this.btnSimpanText = this.btnUbahText;
                            this.btnSimpanWarna = this.btnUbahnWarna;
                            this.setState(dart.fn(() => {
                              this.btnSimpanText;
                              this.btnSimpanWarna;
                            }, T.VoidTovoid()));
                          }, T.VoidTovoid())}), background: new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 10}), color: colors.Colors.red, child: new basic.Align.new({alignment: alignment.Alignment.centerLeft, child: new icon.Icon.new(icons.Icons.delete, {color: colors.Colors.white})})}), secondaryBackground: new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 10}), color: new ui.Color.fromARGB(255, 187, 187, 187), child: new basic.Align.new({alignment: alignment.Alignment.centerLeft, child: new icon.Icon.new(icons.Icons.delete, {color: colors.Colors.white})})}), onDismissed: dart.fn(direction => {
                          this.daftarUser[$removeAt](index);
                          this.setState(dart.fn(() => {
                            this.daftarUser;
                          }, T.VoidTovoid()));
                        }, T.DismissDirectionTovoid()), confirmDismiss: dart.fn(direction => async.async(T.boolN(), function*() {
                          if (direction === dismissible.DismissDirection.startToEnd) {
                            return yield dialog.showDialog(core.bool, {context: context, builder: dart.fn(context => new dialog.AlertDialog.new({title: C[1] || CT.C1, content: C[2] || CT.C2, actions: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => navigator.Navigator.of(context).pop(core.bool, true), T.VoidTovoid()), child: C[3] || CT.C3}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => navigator.Navigator.of(context).pop(core.bool, false), T.VoidTovoid()), child: C[4] || CT.C4})])}), T.BuildContextToAlertDialog())});
                          } else {
                            return false;
                          }
                        }), T.DismissDirectionToFutureOfboolN())}), T.BuildContextAndintToDismissible()), separatorBuilder: dart.fn((context, index) => new divider.Divider.new(), T.BuildContextAndintToDivider()), itemCount: this.daftarUser[$length]})})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new userlist._UserListState.new();
    }
  };
  (userlist._UserListState.new = function() {
    this.Nama = new editable_text.TextEditingController.new();
    this.Umur = new editable_text.TextEditingController.new();
    this.Email = new editable_text.TextEditingController.new();
    this.daftarUser = T.JSArrayOfUserData().of([new userdata.UserData.new("Riel", 24, "rieliesh@gmail.com"), new userdata.UserData.new("Prana", 21, "pranaz@gmail.com"), new userdata.UserData.new("Vielin", 22, "phiel@gmail.com")]);
    this.btnSimpanText = "Simpan";
    this.btnUbahText = "Ubah";
    this.btnSimpanWarna = new ui.Color.fromARGB(255, 187, 146, 252);
    this.btnUbahnWarna = new ui.Color.fromARGB(255, 157, 146, 252);
    this.IndexDipilih = 0;
    userlist._UserListState.__proto__.new.call(this);
    ;
  }).prototype = userlist._UserListState.prototype;
  dart.addTypeTests(userlist._UserListState);
  dart.addTypeCaches(userlist._UserListState);
  dart.setMethodSignature(userlist._UserListState, () => ({
    __proto__: dart.getMethods(userlist._UserListState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(userlist._UserListState, I[0]);
  dart.setFieldSignature(userlist._UserListState, () => ({
    __proto__: dart.getFields(userlist._UserListState.__proto__),
    Nama: dart.fieldType(editable_text.TextEditingController),
    Umur: dart.fieldType(editable_text.TextEditingController),
    Email: dart.fieldType(editable_text.TextEditingController),
    daftarUser: dart.fieldType(core.List$(userdata.UserData)),
    btnSimpanText: dart.fieldType(core.String),
    btnUbahText: dart.fieldType(core.String),
    btnSimpanWarna: dart.fieldType(ui.Color),
    btnUbahnWarna: dart.fieldType(ui.Color),
    IndexDipilih: dart.fieldType(core.int)
  }));
  var userData$ = dart.privateName(useritem, "UserItem.userData");
  useritem.UserItem = class UserItem extends framework.StatelessWidget {
    get userData() {
      return this[userData$];
    }
    set userData(value) {
      this[userData$] = value;
    }
    static ['_#new#tearOff'](userData) {
      return new useritem.UserItem.new(userData);
    }
    build(context) {
      return new basic.Row.new({children: T.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundColor: new ui.Color.fromARGB(255, 157, 146, 252), child: new text.Text.new(this.userData.nama[$_get](0)[$toUpperCase](), {style: new text_style.TextStyle.new({color: colors.Colors.white})})}), new container.Container.new({padding: new edge_insets.EdgeInsets.all(5), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([new text.Text.new(this.userData.nama, {style: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold})}), new text.Text.new("Umur :" + this.userData.umur[$toString]() + "" + "Email :" + this.userData.email)])})})])});
    }
  };
  (useritem.UserItem.new = function(userData) {
    this[userData$] = userData;
    useritem.UserItem.__proto__.new.call(this);
    ;
  }).prototype = useritem.UserItem.prototype;
  dart.addTypeTests(useritem.UserItem);
  dart.addTypeCaches(useritem.UserItem);
  dart.setMethodSignature(useritem.UserItem, () => ({
    __proto__: dart.getMethods(useritem.UserItem.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(useritem.UserItem, I[1]);
  dart.setFieldSignature(useritem.UserItem, () => ({
    __proto__: dart.getFields(useritem.UserItem.__proto__),
    userData: dart.fieldType(userdata.UserData)
  }));
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  fluttertoast_web.FluttertoastWebPlugin = class FluttertoastWebPlugin extends core.Object {
    static ['_#new#tearOff']() {
      return new fluttertoast_web.FluttertoastWebPlugin.new();
    }
    static registerWith(registrar) {
      let channel = new platform_channel.MethodChannel.new("PonnamKarthik/fluttertoast", C[5] || CT.C5, registrar);
      let instance = new fluttertoast_web.FluttertoastWebPlugin.new();
      channel.setMethodCallHandler(dart.bind(instance, 'handleMethodCall'));
    }
    handleMethodCall(call) {
      return async.async(dart.dynamic, (function* handleMethodCall() {
        switch (call.method) {
          case "showToast":
            {
              this.showToast(call.arguments);
              return true;
            }
          default:
            {
              dart.throw(new message_codec.PlatformException.new({code: "Unimplemented", details: "The fluttertoast plugin for web doesn't implement " + "the method '" + call.method + "'"}));
            }
        }
      }).bind(this));
    }
    showToast(args) {
      let t1, t1$, t1$0;
      let msg = core.String.as(dart.dsend(args, '_get', ["msg"]));
      let gravity = "top";
      if (dart.equals(dart.dsend(args, '_get', ["gravity"]), "top") || dart.equals(dart.dsend(args, '_get', ["gravity"]), "bottom")) {
        gravity = T.StringN().as(dart.dsend(args, '_get', ["gravity"]));
      }
      let position = core.String.as((t1 = dart.dsend(args, '_get', ["webPosition"]), t1 == null ? "right" : t1));
      let bgColor = core.String.as((t1$ = dart.dsend(args, '_get', ["webBgColor"]), t1$ == null ? "linear-gradient(to right, #00b09b, #96c93d)" : t1$));
      let textColor = T.intN().as(dart.dsend(args, '_get', ["textcolor"]));
      let time = dart.dsend(args, '_get', ["time"]) == null ? 3000 : core.int.parse(dart.toString(dart.dsend(args, '_get', ["time"]))) * 1000;
      let showClose = core.bool.as((t1$0 = dart.dsend(args, '_get', ["webShowClose"]), t1$0 == null ? false : t1$0));
      this.addHtmlToast({msg: msg, gravity: gravity, position: position, bgcolor: bgColor, showClose: showClose, time: time, textColor: textColor});
    }
    injectCssAndJSLibraries() {
      return async.async(dart.void, function* injectCssAndJSLibraries() {
        let t1, t1$;
        let loading = T.JSArrayOfFutureOfvoid().of([]);
        let tags = T.JSArrayOfHtmlElement().of([]);
        let cssUrl = ui.webOnlyAssetManager.getAssetUrl("packages/fluttertoast/assets/toastify.css");
        let css = (t1 = html.LinkElement.new(), (() => {
          t1[$id] = "toast-css";
          t1[$attributes] = new (T.IdentityMapOfString$String()).from(["rel", "stylesheet"]);
          t1[$href] = cssUrl;
          return t1;
        })());
        tags[$add](css);
        let jsUrl = ui.webOnlyAssetManager.getAssetUrl("packages/fluttertoast/assets/toastify.js");
        let script = (t1$ = html.ScriptElement.new(), (() => {
          t1$.async = true;
          t1$[$src] = jsUrl;
          return t1$;
        })());
        loading[$add](script[$onLoad].first);
        tags[$add](script);
        dart.nullCheck(html.querySelector("head"))[$children][$addAll](tags);
        yield async.Future.wait(dart.void, loading);
      });
    }
    addHtmlToast(opts) {
      let t1;
      let msg = opts && 'msg' in opts ? opts.msg : "";
      let gravity = opts && 'gravity' in opts ? opts.gravity : "top";
      let position = opts && 'position' in opts ? opts.position : "right";
      let bgcolor = opts && 'bgcolor' in opts ? opts.bgcolor : "linear-gradient(to right, #00b09b, #96c93d)";
      let time = opts && 'time' in opts ? opts.time : 3000;
      let showClose = opts && 'showClose' in opts ? opts.showClose : false;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let m = msg[$replaceAll]("'", "\\'")[$replaceAll]("\n", "<br />");
      let ele = html.querySelector("#toast-content");
      let content = "          var toastElement = Toastify({\n            text: '" + m + "',\n            gravity: '" + dart.str(gravity) + "',\n            position: '" + position + "',\n            duration: " + dart.str(time) + ",\n            close: " + dart.str(showClose) + ",\n            backgroundColor: \"" + bgcolor + "\",\n          });\n          toastElement.showToast();\n        ";
      if (html.querySelector("#toast-content") != null) {
        dart.nullCheck(ele)[$remove]();
      }
      let scriptText = (t1 = html.ScriptElement.new(), (() => {
        t1[$id] = "toast-content";
        t1[$innerHtml] = content;
        return t1;
      })());
      dart.nullCheck(html.querySelector("head"))[$children][$add](scriptText);
      if (textColor != null) {
        let toast = dart.nullCheck(html.querySelector(".toastify"));
        let tcRadix = textColor[$toRadixString](16);
        let tC = tcRadix[$substring](2) + tcRadix[$substring](0, 2);
        toast[$style][$setProperty]("color", "#" + tC);
      }
    }
  };
  (fluttertoast_web.FluttertoastWebPlugin.new = function() {
    this.injectCssAndJSLibraries();
  }).prototype = fluttertoast_web.FluttertoastWebPlugin.prototype;
  dart.addTypeTests(fluttertoast_web.FluttertoastWebPlugin);
  dart.addTypeCaches(fluttertoast_web.FluttertoastWebPlugin);
  dart.setMethodSignature(fluttertoast_web.FluttertoastWebPlugin, () => ({
    __proto__: dart.getMethods(fluttertoast_web.FluttertoastWebPlugin.__proto__),
    handleMethodCall: dart.fnType(async.Future, [message_codec.MethodCall]),
    showToast: dart.fnType(dart.dynamic, [dart.dynamic]),
    injectCssAndJSLibraries: dart.fnType(async.Future$(dart.void), []),
    addHtmlToast: dart.fnType(dart.dynamic, [], {bgcolor: core.String, gravity: dart.nullable(core.String), msg: core.String, position: core.String, showClose: core.bool, textColor: dart.nullable(core.int), time: core.int}, {})
  }));
  dart.setStaticMethodSignature(fluttertoast_web.FluttertoastWebPlugin, () => ['registerWith']);
  dart.setLibraryUri(fluttertoast_web.FluttertoastWebPlugin, I[2]);
  var nama$ = dart.privateName(userdata, "UserData.nama");
  var umur$ = dart.privateName(userdata, "UserData.umur");
  var email$ = dart.privateName(userdata, "UserData.email");
  userdata.UserData = class UserData extends core.Object {
    get nama() {
      return this[nama$];
    }
    set nama(value) {
      this[nama$] = value;
    }
    get umur() {
      return this[umur$];
    }
    set umur(value) {
      this[umur$] = value;
    }
    get email() {
      return this[email$];
    }
    set email(value) {
      this[email$] = value;
    }
    static ['_#new#tearOff'](nama, umur, email) {
      return new userdata.UserData.new(nama, umur, email);
    }
  };
  (userdata.UserData.new = function(nama, umur, email) {
    this[nama$] = nama;
    this[umur$] = umur;
    this[email$] = email;
    ;
  }).prototype = userdata.UserData.prototype;
  dart.addTypeTests(userdata.UserData);
  dart.addTypeCaches(userdata.UserData);
  dart.setLibraryUri(userdata.UserData, I[3]);
  dart.setFieldSignature(userdata.UserData, () => ({
    __proto__: dart.getFields(userdata.UserData.__proto__),
    nama: dart.fieldType(core.String),
    umur: dart.fieldType(core.int),
    email: dart.fieldType(core.String)
  }));
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  fluttertoast.Toast = class Toast extends core._Enum {
    [_enumToString]() {
      return "Toast." + this[_name];
    }
  };
  (fluttertoast.Toast.new = function(index, name) {
    fluttertoast.Toast.__proto__.new.call(this, index, name);
    ;
  }).prototype = fluttertoast.Toast.prototype;
  dart.addTypeTests(fluttertoast.Toast);
  dart.addTypeCaches(fluttertoast.Toast);
  dart.setMethodSignature(fluttertoast.Toast, () => ({
    __proto__: dart.getMethods(fluttertoast.Toast.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(fluttertoast.Toast, I[4]);
  dart.setStaticFieldSignature(fluttertoast.Toast, () => ['values', 'LENGTH_SHORT', 'LENGTH_LONG']);
  dart.defineLazy(fluttertoast.Toast, {
    /*fluttertoast.Toast.values*/get values() {
      return C[7] || CT.C7;
    },
    /*fluttertoast.Toast.LENGTH_SHORT*/get LENGTH_SHORT() {
      return C[8] || CT.C8;
    },
    /*fluttertoast.Toast.LENGTH_LONG*/get LENGTH_LONG() {
      return C[9] || CT.C9;
    }
  }, false);
  fluttertoast.ToastGravity = class ToastGravity extends core._Enum {
    [_enumToString]() {
      return "ToastGravity." + this[_name];
    }
  };
  (fluttertoast.ToastGravity.new = function(index, name) {
    fluttertoast.ToastGravity.__proto__.new.call(this, index, name);
    ;
  }).prototype = fluttertoast.ToastGravity.prototype;
  dart.addTypeTests(fluttertoast.ToastGravity);
  dart.addTypeCaches(fluttertoast.ToastGravity);
  dart.setMethodSignature(fluttertoast.ToastGravity, () => ({
    __proto__: dart.getMethods(fluttertoast.ToastGravity.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(fluttertoast.ToastGravity, I[4]);
  dart.setStaticFieldSignature(fluttertoast.ToastGravity, () => ['values', 'TOP', 'BOTTOM', 'CENTER', 'TOP_LEFT', 'TOP_RIGHT', 'BOTTOM_LEFT', 'BOTTOM_RIGHT', 'CENTER_LEFT', 'CENTER_RIGHT', 'SNACKBAR', 'NONE']);
  dart.defineLazy(fluttertoast.ToastGravity, {
    /*fluttertoast.ToastGravity.values*/get values() {
      return C[10] || CT.C10;
    },
    /*fluttertoast.ToastGravity.TOP*/get TOP() {
      return C[11] || CT.C11;
    },
    /*fluttertoast.ToastGravity.BOTTOM*/get BOTTOM() {
      return C[12] || CT.C12;
    },
    /*fluttertoast.ToastGravity.CENTER*/get CENTER() {
      return C[13] || CT.C13;
    },
    /*fluttertoast.ToastGravity.TOP_LEFT*/get TOP_LEFT() {
      return C[14] || CT.C14;
    },
    /*fluttertoast.ToastGravity.TOP_RIGHT*/get TOP_RIGHT() {
      return C[15] || CT.C15;
    },
    /*fluttertoast.ToastGravity.BOTTOM_LEFT*/get BOTTOM_LEFT() {
      return C[16] || CT.C16;
    },
    /*fluttertoast.ToastGravity.BOTTOM_RIGHT*/get BOTTOM_RIGHT() {
      return C[17] || CT.C17;
    },
    /*fluttertoast.ToastGravity.CENTER_LEFT*/get CENTER_LEFT() {
      return C[18] || CT.C18;
    },
    /*fluttertoast.ToastGravity.CENTER_RIGHT*/get CENTER_RIGHT() {
      return C[19] || CT.C19;
    },
    /*fluttertoast.ToastGravity.SNACKBAR*/get SNACKBAR() {
      return C[20] || CT.C20;
    },
    /*fluttertoast.ToastGravity.NONE*/get NONE() {
      return C[21] || CT.C21;
    }
  }, false);
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  fluttertoast.Fluttertoast = class Fluttertoast extends core.Object {
    static cancel() {
      return async.async(T.boolN(), function* cancel() {
        let res = (yield fluttertoast.Fluttertoast._channel.invokeMethod(core.bool, "cancel"));
        return res;
      });
    }
    static showToast(opts) {
      let msg = opts && 'msg' in opts ? opts.msg : null;
      let toastLength = opts && 'toastLength' in opts ? opts.toastLength : null;
      let timeInSecForIosWeb = opts && 'timeInSecForIosWeb' in opts ? opts.timeInSecForIosWeb : 1;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let gravity = opts && 'gravity' in opts ? opts.gravity : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let webShowClose = opts && 'webShowClose' in opts ? opts.webShowClose : false;
      let webBgColor = opts && 'webBgColor' in opts ? opts.webBgColor : "linear-gradient(to right, #00b09b, #96c93d)";
      let webPosition = opts && 'webPosition' in opts ? opts.webPosition : "right";
      return async.async(T.boolN(), function* showToast() {
        let toast = "short";
        if (toastLength === fluttertoast.Toast.LENGTH_LONG) {
          toast = "long";
        }
        let gravityToast = "bottom";
        if (gravity === fluttertoast.ToastGravity.TOP) {
          gravityToast = "top";
        } else if (gravity === fluttertoast.ToastGravity.CENTER) {
          gravityToast = "center";
        } else {
          gravityToast = "bottom";
        }
        if (backgroundColor == null) {
          backgroundColor = colors.Colors.black;
        }
        if (textColor == null) {
          textColor = colors.Colors.white;
        }
        let params = new (T.IdentityMapOfString$dynamic()).from(["msg", msg, "length", toast, "time", timeInSecForIosWeb, "gravity", gravityToast, "bgcolor", backgroundColor.value, "iosBgcolor", backgroundColor.value, "textcolor", textColor.value, "iosTextcolor", textColor.value, "fontSize", fontSize, "webShowClose", webShowClose, "webBgColor", webBgColor, "webPosition", webPosition]);
        let res = (yield fluttertoast.Fluttertoast._channel.invokeMethod(core.bool, "showToast", params));
        return res;
      });
    }
    static ['_#new#tearOff']() {
      return new fluttertoast.Fluttertoast.new();
    }
  };
  (fluttertoast.Fluttertoast.new = function() {
    ;
  }).prototype = fluttertoast.Fluttertoast.prototype;
  dart.addTypeTests(fluttertoast.Fluttertoast);
  dart.addTypeCaches(fluttertoast.Fluttertoast);
  dart.setStaticMethodSignature(fluttertoast.Fluttertoast, () => ['cancel', 'showToast']);
  dart.setLibraryUri(fluttertoast.Fluttertoast, I[4]);
  dart.setStaticFieldSignature(fluttertoast.Fluttertoast, () => ['_channel']);
  dart.defineLazy(fluttertoast.Fluttertoast, {
    /*fluttertoast.Fluttertoast._channel*/get _channel() {
      return C[22] || CT.C22;
    }
  }, false);
  var context = dart.privateName(fluttertoast, "FToast.context");
  var _entry = dart.privateName(fluttertoast, "_entry");
  var _overlayQueue = dart.privateName(fluttertoast, "_overlayQueue");
  var _timer = dart.privateName(fluttertoast, "_timer");
  var _fadeTimer = dart.privateName(fluttertoast, "_fadeTimer");
  var _showOverlay = dart.privateName(fluttertoast, "_showOverlay");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _getPostionWidgetBasedOnGravity = dart.privateName(fluttertoast, "_getPostionWidgetBasedOnGravity");
  fluttertoast.FToast = class FToast extends core.Object {
    get context() {
      return this[context];
    }
    set context(value) {
      this[context] = value;
    }
    static new() {
      return fluttertoast.FToast._instance;
    }
    static ['_#new#tearOff']() {
      return fluttertoast.FToast.new();
    }
    init(context) {
      fluttertoast.FToast._instance.context = context;
      return fluttertoast.FToast._instance;
    }
    static ['_#_internal#tearOff']() {
      return new fluttertoast.FToast._internal();
    }
    [_showOverlay]() {
      if (this[_overlayQueue][$length] === 0) {
        this[_entry] = null;
        return;
      }
      if (this.context == null) {
        this.removeQueuedCustomToasts();
        dart.throw("Error: Context is null, Please call init(context) before showing toast.");
      }
      let _overlay = null;
      try {
        _overlay = overlay$.Overlay.of(dart.nullCheck(this.context));
      } catch (e) {
        let err = dart.getThrown(e);
        if (core.Object.is(err)) {
          this.removeQueuedCustomToasts();
          dart.throw("Error: Overlay is null. \n      Please don't use top of the widget tree context (such as Navigator or MaterialApp) or \n      create overlay manually in MaterialApp builder.\n      More information \n        - https://github.com/ponnamkarthik/FlutterToast/issues/393\n        - https://github.com/ponnamkarthik/FlutterToast/issues/234");
        } else
          throw e;
      }
      if (_overlay == null) {
        this.removeQueuedCustomToasts();
        dart.throw("Error: Overlay is null. \n      Please don't use top of the widget tree context (such as Navigator or MaterialApp) or \n      create overlay manually in MaterialApp builder.\n      More information \n        - https://github.com/ponnamkarthik/FlutterToast/issues/393\n        - https://github.com/ponnamkarthik/FlutterToast/issues/234");
      }
      let _toastEntry = this[_overlayQueue][$removeAt](0);
      this[_entry] = _toastEntry.entry;
      dart.dsend(_overlay, 'insert', [dart.nullCheck(this[_entry])]);
      this[_timer] = async.Timer.new(_toastEntry.duration, dart.fn(() => {
        this[_fadeTimer] = async.Timer.new(_toastEntry.fadeDuration, dart.fn(() => {
          this.removeCustomToast();
        }, T.VoidTovoid()));
      }, T.VoidTovoid()));
    }
    removeCustomToast() {
      let t6, t6$, t6$0;
      t6 = this[_timer];
      t6 == null ? null : t6.cancel();
      t6$ = this[_fadeTimer];
      t6$ == null ? null : t6$.cancel();
      this[_timer] = null;
      this[_fadeTimer] = null;
      t6$0 = this[_entry];
      t6$0 == null ? null : t6$0.remove();
      this[_entry] = null;
      this[_showOverlay]();
    }
    removeQueuedCustomToasts() {
      let t6, t6$, t6$0;
      t6 = this[_timer];
      t6 == null ? null : t6.cancel();
      t6$ = this[_fadeTimer];
      t6$ == null ? null : t6$.cancel();
      this[_timer] = null;
      this[_fadeTimer] = null;
      this[_overlayQueue][$clear]();
      t6$0 = this[_entry];
      t6$0 == null ? null : t6$0.remove();
      this[_entry] = null;
    }
    showToast(opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let positionedToastBuilder = opts && 'positionedToastBuilder' in opts ? opts.positionedToastBuilder : null;
      let toastDuration = opts && 'toastDuration' in opts ? opts.toastDuration : C[23] || CT.C23;
      let gravity = opts && 'gravity' in opts ? opts.gravity : null;
      let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C[24] || CT.C24;
      let ignorePointer = opts && 'ignorePointer' in opts ? opts.ignorePointer : false;
      let isDismissable = opts && 'isDismissable' in opts ? opts.isDismissable : false;
      if (this.context == null) dart.throw("Error: Context is null, Please call init(context) before showing toast.");
      let newChild = new fluttertoast._ToastStateFul.new(child, toastDuration, fadeDuration, ignorePointer, !isDismissable ? null : dart.fn(() => {
        this.removeCustomToast();
      }, T.VoidTovoid()));
      if (gravity === fluttertoast.ToastGravity.BOTTOM) {
        if (media_query.MediaQuery.of(dart.nullCheck(this.context)).viewInsets.bottom !== 0) {
          gravity = fluttertoast.ToastGravity.CENTER;
        }
      }
      let newEntry = new overlay$.OverlayEntry.new({builder: dart.fn(context => {
          if (positionedToastBuilder != null) return positionedToastBuilder(context, newChild);
          return framework.Widget.as(this[_getPostionWidgetBasedOnGravity](newChild, gravity));
        }, T.BuildContextToWidget())});
      this[_overlayQueue][$add](new fluttertoast._ToastEntry.new({entry: newEntry, duration: toastDuration, fadeDuration: fadeDuration}));
      if (this[_timer] == null) this[_showOverlay]();
    }
    [_getPostionWidgetBasedOnGravity](child, gravity) {
      switch (gravity) {
        case C[11] || CT.C11:
          {
            return new basic.Positioned.new({top: 100, left: 24, right: 24, child: child});
          }
        case C[14] || CT.C14:
          {
            return new basic.Positioned.new({top: 100, left: 24, child: child});
          }
        case C[15] || CT.C15:
          {
            return new basic.Positioned.new({top: 100, right: 24, child: child});
          }
        case C[13] || CT.C13:
          {
            return new basic.Positioned.new({top: 50, bottom: 50, left: 24, right: 24, child: child});
          }
        case C[18] || CT.C18:
          {
            return new basic.Positioned.new({top: 50, bottom: 50, left: 24, child: child});
          }
        case C[19] || CT.C19:
          {
            return new basic.Positioned.new({top: 50, bottom: 50, right: 24, child: child});
          }
        case C[16] || CT.C16:
          {
            return new basic.Positioned.new({bottom: 50, left: 24, child: child});
          }
        case C[17] || CT.C17:
          {
            return new basic.Positioned.new({bottom: 50, right: 24, child: child});
          }
        case C[20] || CT.C20:
          {
            return new basic.Positioned.new({bottom: media_query.MediaQuery.of(dart.nullCheck(this.context)).viewInsets.bottom, left: 0, right: 0, child: child});
          }
        case C[21] || CT.C21:
          {
            return new basic.Positioned.fill({child: child});
          }
        case C[12] || CT.C12:
        default:
          {
            return new basic.Positioned.new({bottom: 50, left: 24, right: 24, child: child});
          }
      }
    }
  };
  (fluttertoast.FToast._internal = function() {
    this[context] = null;
    this[_entry] = null;
    this[_overlayQueue] = T.JSArrayOf_ToastEntry().of([]);
    this[_timer] = null;
    this[_fadeTimer] = null;
    ;
  }).prototype = fluttertoast.FToast.prototype;
  dart.addTypeTests(fluttertoast.FToast);
  dart.addTypeCaches(fluttertoast.FToast);
  dart.setMethodSignature(fluttertoast.FToast, () => ({
    __proto__: dart.getMethods(fluttertoast.FToast.__proto__),
    init: dart.fnType(fluttertoast.FToast, [framework.BuildContext]),
    [_showOverlay]: dart.fnType(dart.dynamic, []),
    removeCustomToast: dart.fnType(dart.dynamic, []),
    removeQueuedCustomToasts: dart.fnType(dart.dynamic, []),
    showToast: dart.fnType(dart.void, [], {fadeDuration: core.Duration, gravity: dart.nullable(fluttertoast.ToastGravity), ignorePointer: core.bool, isDismissable: core.bool, positionedToastBuilder: dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget])), toastDuration: core.Duration}, {child: framework.Widget}),
    [_getPostionWidgetBasedOnGravity]: dart.fnType(dart.dynamic, [framework.Widget, dart.nullable(fluttertoast.ToastGravity)])
  }));
  dart.setStaticMethodSignature(fluttertoast.FToast, () => ['new']);
  dart.setLibraryUri(fluttertoast.FToast, I[4]);
  dart.setFieldSignature(fluttertoast.FToast, () => ({
    __proto__: dart.getFields(fluttertoast.FToast.__proto__),
    context: dart.fieldType(dart.nullable(framework.BuildContext)),
    [_entry]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [_overlayQueue]: dart.fieldType(core.List$(fluttertoast._ToastEntry)),
    [_timer]: dart.fieldType(dart.nullable(async.Timer)),
    [_fadeTimer]: dart.fieldType(dart.nullable(async.Timer))
  }));
  dart.setStaticFieldSignature(fluttertoast.FToast, () => ['_instance']);
  dart.defineLazy(fluttertoast.FToast, {
    /*fluttertoast.FToast._instance*/get _instance() {
      return new fluttertoast.FToast._internal();
    }
  }, false);
  var child$ = dart.privateName(fluttertoast, "_FToastHolder.child");
  fluttertoast._FToastHolder = class _FToastHolder extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new fluttertoast._FToastHolder.new({key: key, child: child});
    }
    build(context) {
      let overlay = new overlay$.Overlay.new({initialEntries: T.JSArrayOfOverlayEntry().of([new overlay$.OverlayEntry.new({builder: dart.fn(ctx => this.child, T.BuildContextToWidget())})])});
      return new basic.Directionality.new({textDirection: ui.TextDirection.ltr, child: overlay});
    }
  };
  (fluttertoast._FToastHolder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[child$] = child;
    fluttertoast._FToastHolder.__proto__.new.call(this, {key: key});
    ;
  }).prototype = fluttertoast._FToastHolder.prototype;
  dart.addTypeTests(fluttertoast._FToastHolder);
  dart.addTypeCaches(fluttertoast._FToastHolder);
  dart.setMethodSignature(fluttertoast._FToastHolder, () => ({
    __proto__: dart.getMethods(fluttertoast._FToastHolder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(fluttertoast._FToastHolder, I[4]);
  dart.setFieldSignature(fluttertoast._FToastHolder, () => ({
    __proto__: dart.getFields(fluttertoast._FToastHolder.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  fluttertoast._ToastEntry = class _ToastEntry extends core.Object {
    static ['_#new#tearOff'](opts) {
      let entry = opts && 'entry' in opts ? opts.entry : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : null;
      return new fluttertoast._ToastEntry.new({entry: entry, duration: duration, fadeDuration: fadeDuration});
    }
  };
  (fluttertoast._ToastEntry.new = function(opts) {
    let entry = opts && 'entry' in opts ? opts.entry : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : null;
    this.entry = entry;
    this.duration = duration;
    this.fadeDuration = fadeDuration;
    ;
  }).prototype = fluttertoast._ToastEntry.prototype;
  dart.addTypeTests(fluttertoast._ToastEntry);
  dart.addTypeCaches(fluttertoast._ToastEntry);
  dart.setLibraryUri(fluttertoast._ToastEntry, I[4]);
  dart.setFieldSignature(fluttertoast._ToastEntry, () => ({
    __proto__: dart.getFields(fluttertoast._ToastEntry.__proto__),
    entry: dart.finalFieldType(overlay$.OverlayEntry),
    duration: dart.finalFieldType(core.Duration),
    fadeDuration: dart.finalFieldType(core.Duration)
  }));
  fluttertoast._ToastStateFul = class _ToastStateFul extends framework.StatefulWidget {
    static ['_#new#tearOff'](child, duration, fadeDuration, ignorePointer, onDismiss, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new fluttertoast._ToastStateFul.new(child, duration, fadeDuration, ignorePointer, onDismiss, {key: key});
    }
    createState() {
      return new fluttertoast.ToastStateFulState.new();
    }
  };
  (fluttertoast._ToastStateFul.new = function(child, duration, fadeDuration, ignorePointer, onDismiss, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    this.child = child;
    this.duration = duration;
    this.fadeDuration = fadeDuration;
    this.ignorePointer = ignorePointer;
    this.onDismiss = onDismiss;
    fluttertoast._ToastStateFul.__proto__.new.call(this, {key: key});
    ;
  }).prototype = fluttertoast._ToastStateFul.prototype;
  dart.addTypeTests(fluttertoast._ToastStateFul);
  dart.addTypeCaches(fluttertoast._ToastStateFul);
  dart.setMethodSignature(fluttertoast._ToastStateFul, () => ({
    __proto__: dart.getMethods(fluttertoast._ToastStateFul.__proto__),
    createState: dart.fnType(fluttertoast.ToastStateFulState, [])
  }));
  dart.setLibraryUri(fluttertoast._ToastStateFul, I[4]);
  dart.setFieldSignature(fluttertoast._ToastStateFul, () => ({
    __proto__: dart.getFields(fluttertoast._ToastStateFul.__proto__),
    child: dart.finalFieldType(framework.Widget),
    duration: dart.finalFieldType(core.Duration),
    fadeDuration: dart.finalFieldType(core.Duration),
    ignorePointer: dart.finalFieldType(core.bool),
    onDismiss: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  var _animationController = dart.privateName(fluttertoast, "_animationController");
  var __ToastStateFulState__fadeAnimation = dart.privateName(fluttertoast, "_#ToastStateFulState#_fadeAnimation");
  var _fadeAnimation = dart.privateName(fluttertoast, "_fadeAnimation");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(fluttertoast._ToastStateFul) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(fluttertoast._ToastStateFul)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(fluttertoast._ToastStateFul));
  fluttertoast.ToastStateFulState = class ToastStateFulState extends State_SingleTickerProviderStateMixin$36 {
    showIt() {
      dart.nullCheck(this[_animationController]).forward();
    }
    hideIt() {
      let t6;
      dart.nullCheck(this[_animationController]).reverse();
      t6 = this[_timer];
      t6 == null ? null : t6.cancel();
    }
    get [_fadeAnimation]() {
      let t6;
      t6 = this[__ToastStateFulState__fadeAnimation];
      return t6 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeAnimation")) : t6;
    }
    set [_fadeAnimation](_fadeAnimation$35param) {
      this[__ToastStateFulState__fadeAnimation] = _fadeAnimation$35param;
    }
    initState() {
      this[_animationController] = new animation_controller.AnimationController.new({vsync: this, duration: this.widget.fadeDuration});
      this[_fadeAnimation] = new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_animationController]), curve: curves.Curves.easeIn});
      super.initState();
      this.showIt();
      this[_timer] = async.Timer.new(this.widget.duration, dart.fn(() => {
        this.hideIt();
      }, T.VoidTovoid()));
    }
    deactivate() {
      let t6;
      t6 = this[_timer];
      t6 == null ? null : t6.cancel();
      dart.nullCheck(this[_animationController]).stop();
      super.deactivate();
    }
    dispose() {
      let t6, t6$;
      t6 = this[_timer];
      t6 == null ? null : t6.cancel();
      t6$ = this[_animationController];
      t6$ == null ? null : t6$.dispose();
      super.dispose();
    }
    build(context) {
      return new gesture_detector.GestureDetector.new({onTap: this.widget.onDismiss == null ? null : dart.fn(() => dart.nullCheck(this.widget.onDismiss)(), T.VoidTovoid()), behavior: proxy_box.HitTestBehavior.translucent, child: new basic.IgnorePointer.new({ignoring: this.widget.ignorePointer, child: new transitions.FadeTransition.new({opacity: T.AnimationOfdouble().as(this[_fadeAnimation]), child: new basic.Center.new({child: new material.Material.new({color: colors.Colors.transparent, child: this.widget.child})})})})});
    }
    static ['_#new#tearOff']() {
      return new fluttertoast.ToastStateFulState.new();
    }
  };
  (fluttertoast.ToastStateFulState.new = function() {
    this[_animationController] = null;
    this[__ToastStateFulState__fadeAnimation] = null;
    this[_timer] = null;
    fluttertoast.ToastStateFulState.__proto__.new.call(this);
    ;
  }).prototype = fluttertoast.ToastStateFulState.prototype;
  dart.addTypeTests(fluttertoast.ToastStateFulState);
  dart.addTypeCaches(fluttertoast.ToastStateFulState);
  dart.setMethodSignature(fluttertoast.ToastStateFulState, () => ({
    __proto__: dart.getMethods(fluttertoast.ToastStateFulState.__proto__),
    showIt: dart.fnType(dart.dynamic, []),
    hideIt: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(fluttertoast.ToastStateFulState, () => ({
    __proto__: dart.getGetters(fluttertoast.ToastStateFulState.__proto__),
    [_fadeAnimation]: animation.Animation
  }));
  dart.setSetterSignature(fluttertoast.ToastStateFulState, () => ({
    __proto__: dart.getSetters(fluttertoast.ToastStateFulState.__proto__),
    [_fadeAnimation]: animation.Animation
  }));
  dart.setLibraryUri(fluttertoast.ToastStateFulState, I[4]);
  dart.setFieldSignature(fluttertoast.ToastStateFulState, () => ({
    __proto__: dart.getFields(fluttertoast.ToastStateFulState.__proto__),
    [_animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__ToastStateFulState__fadeAnimation]: dart.fieldType(dart.nullable(animation.Animation)),
    [_timer]: dart.fieldType(dart.nullable(async.Timer))
  }));
  fluttertoast.FToastBuilder = function FToastBuilder() {
    return dart.fn((context, child) => new fluttertoast._FToastHolder.new({child: dart.nullCheck(child)}), T.BuildContextAndWidgetNTo_FToastHolder());
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/userlist.dart": userlist,
    "package:flutter_app/useritem.dart": useritem,
    "package:fluttertoast/fluttertoast_web.dart": fluttertoast_web,
    "package:flutter_app/userdata.dart": userdata,
    "package:fluttertoast/fluttertoast.dart": fluttertoast
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/userlist.dart","/zapp/project/lib/useritem.dart","/zapp/pub/.pub_cache/hosted/pub.dev/fluttertoast-8.2.4/lib/fluttertoast_web.dart","/zapp/project/lib/userdata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/fluttertoast-8.2.4/lib/fluttertoast.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    userlist: userlist,
    useritem: useritem,
    fluttertoast_web: fluttertoast_web,
    userdata: userdata,
    fluttertoast: fluttertoast
  };
}));

//# sourceMappingURL=main.js.map
